{"version":3,"sources":["component/ButtonReverse/ButtonReverse.js","component/ButtonSortAlphabetically/ButtonSortAlphabetically.js","component/Select/Select.js","component/ButtonReset/ButtonReset.js","component/ButtonSortByLength/ButtonSortByLength.js","component/ButtonList/ButtonList.js","component/GoodsList/GoodsList.js","App.js","index.js"],"names":["ButtonReverse","props","goodsFromServer","callbackUpdateData","sortedArr","reverse","type","onClick","ButtonSortAlphabetically","sort","a","b","localeCompare","Select","originalGoodsFromServer","defaultSelect","htmlFor","id","onChange","e","filter","goods","length","target","value","PropsTypes","func","isRequired","arrayOf","string","bool","defaultProps","undefined","ButtonReset","ButtonSortByLength","ButtonList","GoodsList","state","updateData","value2","setState","this","map","key","React","Component","App","renderList","renderGoodList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cf15583.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\n\nexport const ButtonReverse = (props) => {\n  const { goodsFromServer, callbackUpdateData } = props;\n  const sortedArr = [...goodsFromServer].reverse();\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => callbackUpdateData(sortedArr)}\n    >\n      Reverse\n    </button>\n  );\n};\n\nButtonReverse.propTypes = {\n  callbackUpdateData: PropsTypes.func.isRequired,\n  goodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nexport const ButtonSortAlphabetically = (props) => {\n  const { callbackUpdateData, goodsFromServer } = props;\n  const sortedArr = [...goodsFromServer].sort((a, b) => a.localeCompare(b));\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => callbackUpdateData(sortedArr)}\n    >\n      ButtonSortAlphabetically\n    </button>\n  );\n};\n\nButtonSortAlphabetically.propTypes = {\n  callbackUpdateData: PropsTypes.func.isRequired,\n  goodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nexport const Select = (props) => {\n  const { callbackUpdateData, originalGoodsFromServer, defaultSelect } = props;\n  const selectFunc = (e) => {\n    callbackUpdateData(\n      originalGoodsFromServer.filter(goods => goods.length >= e.target.value),\n    );\n  };\n\n  return (\n    <>\n      <label htmlFor=\"goods\">Choose length of visible items:</label>\n      <select id=\"goods\" onChange={selectFunc} value={defaultSelect}>\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        <option>6</option>\n        <option>7</option>\n        <option>8</option>\n        <option>9</option>\n        <option>10</option>\n      </select>\n    </>\n  );\n};\n\nexport const propTypesButtons = {\n  callbackUpdateData: PropsTypes.func.isRequired,\n  originalGoodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n  defaultSelect: PropsTypes.bool,\n};\n\nSelect.propTypes = propTypesButtons;\n\nSelect.defaultProps = {\n  defaultSelect: undefined,\n};\n","import React from 'react';\nimport { propTypesButtons } from '../Select/Select';\n\nexport const ButtonReset = (props) => {\n  const { callbackUpdateData, originalGoodsFromServer } = props;\n  const sortedArr = [...originalGoodsFromServer];\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        callbackUpdateData(sortedArr, true);\n      }}\n    >\n      Reset\n    </button>\n  );\n};\n\nButtonReset.propTypes = propTypesButtons;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nexport const ButtonSortByLength = (props) => {\n  const { callbackUpdateData, goodsFromServer } = props;\n  const sortedArr = [...goodsFromServer]\n    .sort((a, b) => b.length - a.length);\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => callbackUpdateData(sortedArr)}\n    >\n      ButtonSortByLength\n    </button>\n  );\n};\n\nButtonSortByLength.propTypes = {\n  callbackUpdateData: PropsTypes.func.isRequired,\n  goodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport { ButtonReverse } from '../ButtonReverse/ButtonReverse';\nimport { ButtonSortAlphabetically }\n  from '../ButtonSortAlphabetically/ButtonSortAlphabetically';\nimport { ButtonReset } from '../ButtonReset/ButtonReset';\nimport { ButtonSortByLength } from '../ButtonSortByLength/ButtonSortByLength';\nimport { Select } from '../Select/Select';\n\nexport const ButtonList = (props) => {\n  const {\n    goodsFromServer,\n    callbackUpdateData,\n    originalGoodsFromServer,\n    defaultSelect,\n  } = props;\n\n  return (\n    <div>\n      <ButtonReverse\n        goodsFromServer={goodsFromServer}\n        callbackUpdateData={callbackUpdateData}\n      />\n\n      <ButtonSortAlphabetically\n        goodsFromServer={goodsFromServer}\n        callbackUpdateData={callbackUpdateData}\n      />\n\n      <ButtonReset\n        originalGoodsFromServer={originalGoodsFromServer}\n        callbackUpdateData={callbackUpdateData}\n      />\n\n      <ButtonSortByLength\n        goodsFromServer={goodsFromServer}\n        callbackUpdateData={callbackUpdateData}\n      />\n\n      <Select\n        originalGoodsFromServer={originalGoodsFromServer}\n        callbackUpdateData={callbackUpdateData}\n        defaultSelect={defaultSelect}\n      />\n    </div>\n  );\n};\n\nButtonList.propTypes = {\n  callbackUpdateData: PropsTypes.func.isRequired,\n  originalGoodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n  goodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n  defaultSelect: PropsTypes.bool,\n};\n\nButtonList.defaultProps = {\n  defaultSelect: undefined,\n};\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport { ButtonList } from '../ButtonList/ButtonList';\n\nexport class GoodsList extends React.Component {\n  state = {\n    goodsFromServer: this.props.goodsFromServer,\n    originalGoodsFromServer: this.props.goodsFromServer,\n    defaultSelect: false,\n  };\n\n  updateData = (value, value2) => {\n    this.setState({\n      goodsFromServer: value,\n      defaultSelect: value2,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ul>\n          {\n            this.state.goodsFromServer.map(goods => (\n              <li key={goods}>{goods}</li>\n            ))\n          }\n        </ul>\n\n        <ButtonList\n          goodsFromServer={this.state.goodsFromServer}\n          callbackUpdateData={this.updateData}\n          originalGoodsFromServer={this.state.originalGoodsFromServer}\n          defaultSelect={this.state.defaultSelect}\n        />\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goodsFromServer: PropsTypes.arrayOf(PropsTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './component/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    renderList: false,\n  };\n\n  renderGoodList = () => {\n    this.setState({\n      renderList: true,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>GoodList</h1>\n        {\n          this.state.renderList\n            ? <GoodsList goodsFromServer={goodsFromServer} />\n            : <button type=\"button\" onClick={this.renderGoodList}>Start</button>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}